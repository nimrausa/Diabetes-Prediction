# -*- coding: utf-8 -*-
"""Proj 3 Diabeties Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zijzf0wDJnUaXzRfaJsppqagDbn0sZ5U

Importing the dependincies
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm #(supprt vector machine)
from sklearn.metrics import accuracy_score

"""Data Collection and Analysis

PIMA Diabetes Dataset
"""

# loading the diabetes dataset to a pandas DataFrame
diabetes_dataset = pd.read_csv('/content/diabetes.csv')

# printinh the forst 5 rows of the dataset
diabetes_dataset.head()

#1=diabatic    0=Non-diabatic
#number of rows and columns in this dataset
diabetes_dataset.shape

#getting the statistivcal measures of the data
diabetes_dataset.describe()

diabetes_dataset['Outcome'].value_counts()

diabetes_dataset.groupby('Outcome').mean()

# separating the data and labels
X= diabetes_dataset.drop(columns='Outcome', axis=1)
Y= diabetes_dataset['Outcome']

print(X)

print(Y)

"""Data Standardizationt"""

scaler= StandardScaler()
scaler.fit(X)

standardized_data = scaler.transform(X)
print(standardized_data)

X= standardized_data
Y= diabetes_dataset['Outcome']

print(X)

print(Y)

"""Train_test_split"""

X_train, X_test, Y_train, Y_test= train_test_split(X,Y, test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

"""Training the Model"""

classifier= svm.SVC(kernel='linear')

#training the support vector Machine classifier
classifier.fit(X_train, Y_train)

"""Model Evalution

Accuracy Scor
"""

# accuracy score on the training data
X_train_prediction = classifier.predict(X_train)
training_data_accuracy= accuracy_score(X_train_prediction, Y_train)
print('Accuracy score of the training data :', training_data_accuracy)

# accuracy score on the test data
X_test_prediction = classifier.predict(X_test)
test_data_accuracy= accuracy_score(X_test_prediction, Y_test)
print('Accuracy score of the training data :', test_data_accuracy)

"""Making a predictive System"""

input_data = (8,183,64,0,0,23.3,0.672,32)

#changing the input_data to numoy array
input_data_as_numpy_array= np.asarray(input_data)

#reshape the array as we are predicting for one instance
input_data_reshaped= input_data_as_numpy_array.reshape(1,-1)

#standardize the inout data
std_data = scaler.transform(input_data_reshaped)
print(std_data)

prediction = classifier.predict(std_data)
print(prediction)

if (prediction[0]==0):
  print('The person is not diabetic')
else:
  print('The person is diabetic')

print(Y_train)

